# Redirect HTTP to HTTPS for all domains
server {
    listen 80;
    server_name barrim.online ads.barrim.online privacy.barrim.online;
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS for backend (barrim.online)
server {
    listen 443 ssl;
    server_name barrim.online;

    ssl_certificate /etc/letsencrypt/live/barrim.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/barrim.online/privkey.pem;

    location / {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS for admin-dashboard (ads.barrim.online)
server {
    listen 443 ssl;
    server_name ads.barrim.online;

    ssl_certificate /etc/letsencrypt/live/ads.barrim.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ads.barrim.online/privkey.pem;

    location / {
        proxy_pass http://barrim-admin-dashboard:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS for privacy subdomain (privacy.barrim.online)
server {
    listen 443 ssl;
    server_name privacy.barrim.online;

    ssl_certificate /etc/letsencrypt/live/privacy.barrim.online/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/privacy.barrim.online/privkey.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    location / {
        proxy_pass http://privacy-service:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
